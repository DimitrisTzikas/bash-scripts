#!/bin/bash
source utilities

function resolv(){
    case $1 in
	'main')
	    notify &&
		sudo systemctl stop dnscrypt-proxy.service &&
		sudo chattr -i /etc/resolv.conf &&
		sudo cp /etc/resolv.conf.main /etc/resolv.conf &&
		sudo chattr +i /etc/resolv.conf &&
		notify 'Resolv Changed';;
	'ihu')
	    notify &&
		sudo systemctl stop dnscrypt-proxy.service &&
		sudo chattr -i /etc/resolv.conf &&
		sudo cp /etc/resolv.conf.ihu /etc/resolv.conf &&
		sudo chattr +i /etc/resolv.conf &&
		notify 'Resolv Changed';;
	'dynamic')
	    notify &&
		sudo systemctl stop dnscrypt-proxy.service &&
		sudo chattr -i /etc/resolv.conf &&
		sudo rm /etc/resolv.conf &&
		sudo resolvconf -u &&
		notify 'Resolv Changed';;
	'encrypted')
	    notify &&
		sudo systemctl start dnscrypt-proxy.service &&
		sudo chattr -i /etc/resolv.conf &&
		sudo cp /etc/resolv.conf.encrypt /etc/resolv.conf &&
		sudo chattr +i /etc/resolv.conf &&
		notify 'Resolv Changed';;
	'mode')
	    ans="$(head --lines=1 /etc/resolv.conf)"
	    if echo $ans | grep "# Generated by resolvconf"; then
		ans='Dynamic'
	    else
		ans="$(echo $ans | cut -d' ' -f2)"
	    fi
	    notify no-id "Resolv: $ans";;
    esac
}

function control_panel(){
    case $(menu 'Control Panel:' 'Wifi\nBluetooth\nEthernet\nResolv\nDNS\nFirewall\nOverview') in
	'Wifi')
	    case $(menu 'Select mode:' 'Enable\nDisable') in
		'Enable')
		    rfkill unblock wifi &&
			notify 'Enabled';;
		'Disable')
		    sudo pkill wpa_supplicant
		    rfkill block wifi &&
			notify 'Disabled';;
	    esac;;
	'Bluetooth')
	    case $(menu 'Select mode:' 'Enable\nDisable') in
		'Enable')
		    sudo systemctl start bluetooth &&
			rfkill unblock bluetooth &&
			notify 'Enabled';;
		'Disable')
		    sudo systemctl stop bluetooth &&
			rfkill block bluetooth &&
			notify 'Disabled';;
	    esac;;
	'Ethernet')
	    case $(menu 'Select mode:' 'Enable\nDisable') in
		'Enable')
		    sudo ip link set up dev enp0s25 &&
			notify 'Enabled';;
		'Disable')
		    sudo ip link set down dev enp0s25 &&
			notify 'Disabled';;
	    esac;;
	'Resolv')
	    case $(menu 'Select mode:' 'Main\nIHU\nDynamic\nEncrypted\nMode') in
		'Main')
		    resolv main;;
		'IHU')
		    resolv ihu;;
		'Dynamic')
		    resolv dynamic;;
		'Encrypted')
		    resolv encrypted;;
		'Mode')
		    resolv mode;;
	    esac;;
	'DNS')
	    case $(menu 'Select mode:' 'Enable\nDisable') in
		'Enable')
		    notify &&
			sudo chattr -i /etc/hosts &&
			sudo cp /etc/hosts.backup /etc/hosts &&
			sudo chattr +i /etc/hosts &&
			notify 'DNS blocking';;
		'Disable')
		    notify &&
			sudo chattr -i /etc/hosts &&
			sudo rm /etc/hosts &&
			sudo touch /etc/hosts &&
			sudo chattr +i /etc/hosts &&
			notify 'No DNS blocking';;
	    esac;;
	'Firewall')
	    case $(menu 'Select mode:' 'On\nOnS\nOff\nPanic\nMode') in
		'On')
		    notify &&
			sudo firewall on &&
			notify 'Mode changed';;
		'OnS')
		    notify &&
			sudo firewall onS &&
			notify 'Mode changed';;
		'Off')
		    notify &&
			sudo firewall off &&
			notify 'Mode changed';;
		'Panic')
		    notify &&
			sudo firewall panic &&
			notify 'Mode changed';;
		'Mode')
		    notify &&
			notify "$(sudo firewall | head --lines=1)"
	    esac;;
	'Overview')
	    notify no-id "Wifi: $(ifconfig | grep '^wls' > /dev/null && echo enabled || echo disabled)"
	    notify no-id "Bluetooth: $(systemctl status bluetooth.service | grep 'running' > /dev/null && echo enabled || echo disabled)"
	    notify no-id "Ethernet: $(ifconfig | grep '^enp' > /dev/null && echo enabled || echo disabled)"
	    resolv mode
	    notify no-id "DNS blocking: $(head --lines=1 /etc/hosts | grep '# DNS blocking' > /dev/null && echo enabled || echo disabled)"
    esac
}

function action(){
    case $(menu 'Action:' 'Lock\nBlue\nNight-night') in
	'Lock')
	    lock;;
	'Blue')
	    mplayer "$HOME/.sounds/windows-xp-error.mp3" &
	    i3lock -n -u -c 000080 -i "$HOME/Pictures/Wallpapers/blue-screen.png";;
	'Night-night')
	    systemctl hibernate;;
    esac
}

function edit(){
    file=`find ~/.dotfiles/ThinkpadX200s -type f | grep -v emacs.d`
    file=`menu 'Edit:' "$file"` &&
	emacs $file &
    disown emacs
}

function mode(){
    case $(menu 'Mode:' 'Home\nWork\nMobile') in
	'Home')
	    notify &&
		sudo firewall onS &&
		sudo ip link set up dev enp0s25 &&
		sudo pkill wpa_supplicant
	    xrandr --output VGA-1 --primary --auto &&
		xrandr --output LVDS-1 --off &&
		xmonad --restart
	    resolv encrypted &&
		notify "Mode changed";;
	'Work')
	    notify &&
		sudo firewall onS &&
		xrandr --output VGA-1 --above LVDS-1 --auto &&
		xrandr --output LVDS-1 --primary --below VGA-1 --auto &&
		xmonad --restart &&
		resolv dynamic &&
		notify "Mode changed";;
	'Mobile')
	    notify &&
		sudo firewall onS
	    sudo ip link set down dev enp0s25
	    xrandr --output VGA-1 --off &&
		xrandr --output LVDS-1 --primary --auto &&
		xmonad --restart
	    resolv encrypted &&
		notify "Mode changed";;
    esac
}

function vpn(){
    location="/home/dimitris/.config/vpn/"
    options=""
    
    cd "$location"
    
    for file in *; do
	options+="$file"
	options+="\n"
    done
    
    option="$(menu 'Which VPN:' "$options")"
    
    [[ $option != "" ]] && xterm -background black -foreground white -e "cd $location && sudo openvpn '$option'"
}

function settings(){
    case $(menu 'Settings:' 'Wallpaper') in
	'Wallpaper')
	    wallpaper=`cd ~/Pictures && find Wallpapers -type f | sed 's/^Wallpapers.//g'` 
	    wallpaper=`menu 'Select wallpaper:' "$wallpaper"` &&
		feh --bg-scale ~/Pictures/Wallpapers/"$wallpaper";;
    esac
}

# Main menu
case $(menu 'Thinkpad X200' 'Control Panel\nAction\nEdit\nMode\nVPN\nSettings') in
    'Control Panel')
	control_panel;;
    'Action')
	action;;
    'Edit')
	edit;;
    'Mode')
	mode;;
    'VPN')
	vpn;;
    'Settings')
	settings;;
esac
