#!/bin/bash
source utilities

function resolv(){
    case "$1" in
	'main')
	    notify &&
		sudo systemctl stop dnscrypt-proxy.service &&
		sudo chattr -i /etc/resolv.conf &&
		sudo cp /etc/resolv.conf.main /etc/resolv.conf &&
		sudo chattr +i /etc/resolv.conf &&
		notify 'Resolv Changed';;
	'ihu')
	    notify &&
		sudo systemctl stop dnscrypt-proxy.service &&
		sudo chattr -i /etc/resolv.conf &&
		sudo cp /etc/resolv.conf.ihu /etc/resolv.conf &&
		sudo chattr +i /etc/resolv.conf &&
		notify 'Resolv Changed';;
	'dynamic')
	    notify &&
		sudo systemctl stop dnscrypt-proxy.service &&
		sudo chattr -i /etc/resolv.conf &&
		sudo rm /etc/resolv.conf &&
		sudo resolvconf -u &&
		notify 'Resolv Changed';;
	'encrypted')
	    notify &&
		sudo systemctl start dnscrypt-proxy.service &&
		sudo chattr -i /etc/resolv.conf &&
		sudo cp /etc/resolv.conf.encrypt /etc/resolv.conf &&
		sudo chattr +i /etc/resolv.conf &&
		notify 'Resolv Changed';;
	'mode')
	    ans="$(head --lines=1 /etc/resolv.conf)"
	    if echo $ans | grep "# Generated by resolvconf"; then
		ans='dynamic'
	    else
		ans="$(echo $ans | cut -d' ' -f2)"
	    fi
	    notify no-id "Resolv: $ans";;
    esac
}

function control_panel(){
    wifi=`ifconfig | grep '^wls' > /dev/null && echo  || echo "||"`
    bluetooth=`systemctl status bluetooth.service | grep 'running' > /dev/null && echo  || echo "||"`
    ethernet=`ifconfig | grep '^enp' > /dev/null && echo  || echo "||"`
    dns=`head --lines=1 /etc/hosts | grep '# DNS blocking' > /dev/null && echo  || echo "||"`
    resolve=`head --lines=1 /etc/resolv.conf | grep '# Generated by resolvconf' >/dev/null && echo dynamic || echo $(head --lines=1 /etc/resolv.conf | cut -d' ' -f2)`

    case $(menu 'Panel' "$wifi\n$bluetooth\n$ethernet\n$dns\n$resolve\n" 'panel.rasi') in
	"")
	    sudo pkill wpa_supplicant
	    rfkill block wifi &&
		notify 'Disabled';;
	"||")
	    rfkill unblock wifi &&
		notify 'Enabled';;
	"")
	    sudo systemctl stop bluetooth &&
		rfkill block bluetooth &&
		notify 'Disabled' &&
		pkill blueberry;;
	"||")
	    sudo systemctl start bluetooth &&
		rfkill unblock bluetooth &&
		notify 'Enabled' &&
		blueberry &;;
	"")
	    sudo ip link set down dev enp0s25 &&
		notify 'Disabled';;
	"||")
	    sudo ip link set up dev enp0s25 &&
		notify 'Enabled';;
	"")
	    notify &&
		sudo chattr -i /etc/hosts &&
		sudo rm /etc/hosts &&
		sudo touch /etc/hosts &&
		sudo chattr +i /etc/hosts &&
		notify 'No DNS blocking';;
	"||")
	    notify &&
		sudo chattr -i /etc/hosts &&
		sudo cp /etc/hosts.backup /etc/hosts &&
		sudo chattr +i /etc/hosts &&
		notify 'DNS blocking';;
	'')
	    case $(menu '' 'on\nonl\nonld\noff\npanic\nmode' 'entry.rasi') in
		'on')
		    notify &&
			sudo firewall on &&
			notify 'Mode changed';;
		'onl')
		    notify &&
			sudo firewall onL &&
			notify 'Mode changed';;
		'onld')
		    notify &&
			sudo firewall onLD &&
			notify 'Mode changed';;
		'off')
		    notify &&
			sudo firewall off &&
			notify 'Mode changed';;
		'panic')
		    notify &&
			sudo firewall panic &&
			notify 'Mode changed';;
		'mode')
		    notify &&
			notify "$(sudo firewall | head --lines=1)"
	    esac;;
	"");;
	*)
	    case $(menu 'Mode:' 'main\nihu\ndynamic\nencrypted' 'entry.rasi') in
		'main')
		    resolv main;;
		'ihu')
		    resolv ihu;;
		'dynamic')
		    resolv dynamic;;
		'encrypted')
		    resolv encrypted;;
	    esac;;
    esac
}

function action(){
    case $(menu 'Action' 'lock\nprograms\nsshd\nnight-night' 'entry.rasi') in
	'lock')
	    lock;;
	'programs')
	    rhythmbox & disown %rhythmbox
	    telegram-desktop & disown %telegram-desktop
	    com.slack.Slack &
	    syncthing-gtk & disown %syncthing-gtk
	    gnome-calendar & disown %gnome-calendar
	    trello & disown %trello;;
	'sshd')
	    if systemctl status sshd; then
		notify &&
		    sudo systemctl stop sshd &&
		    sudo firewall onL &&
		    notify "SSH disabled"
	    else
		notify &&
		    sudo systemctl start sshd &&
		    sudo firewall onLD &&
		    notify "SSH enabled"
	    fi;;
	'night-night')
	    systemctl hibernate;;
    esac
}

function edit(){
    file=`find ~/.dotfiles/ThinkpadX200s -type f | grep -v emacs.d`
    file=`menu 'Edit' "$file" 'entry.rasi'` &&
	emacs $file
}

function mode(){
    case $(menu 'Mode' 'home\nwork\nmobile' 'entry.rasi') in
	'home')
	    notify &&
		sudo firewall onl
	    sudo ip link set up dev enp0s25 &&
		sudo pkill wpa_supplicant &&
		sudo pkill dhcpcd &&
		sudo dhcpcd
	    xrandr --output VGA-1 --primary --auto &&
		xrandr --output LVDS-1 --off &&
		xmonad --restart
	    resolv encrypted &&
		notify "Mode changed";;
	'work')
	    notify &&
		sudo firewall onl
	    xrandr --output VGA-1 --above LVDS-1 --auto &&
		xrandr --output LVDS-1 --primary --below VGA-1 --auto &&
		xmonad --restart &&
		resolv dynamic &&
		notify "Mode changed";;
	'mobile')
	    notify &&
		sudo firewall onl
	    sudo ip link set down dev enp0s25 &&
		sudo pkill dhcpcd
	    xrandr --output VGA-1 --off &&
		xrandr --output LVDS-1 --primary --auto &&
		xmonad --restart
	    resolv encrypted &&
		notify "Mode changed";;
    esac
}

function vpn(){
    location="/home/dimitris/.config/vpn/"
    options=""
    
    cd "$location"
    
    for file in *; do
	options+="$file"
	options+="\n"
    done
    
    option="$(menu 'Which VPN' "$options" 'entry.rasi')"
    
    [[ $option != "" ]] && xterm -background black -foreground white -e "cd $location && sudo openvpn '$option'"
}

function settings(){
    case $(menu 'Settings' 'wallpaper\nwallpaper(Scale)\nlock screen' 'entry.rasi') in
	'wallpaper')
	    wallpaper=`cd ~/Pictures && find Wallpapers -type f | sed 's/^Wallpapers.//g'`
	    wallpaper=`menu 'Select wallpaper' "$wallpaper" 'entry.rasi'` &&
		feh --bg-fill ~/Pictures/Wallpapers/"$wallpaper";;
	'wallpaper(Scale)')
	    wallpaper=`cd ~/Pictures && find Wallpapers -type f | sed 's/^Wallpapers.//g'`
	    wallpaper=`menu 'Select wallpaper' "$wallpaper" 'entry.rasi'` &&
		feh --bg-scale ~/Pictures/Wallpapers/"$wallpaper";;
	'lock screen')
	    wallpaper=`cd ~/Pictures && find Wallpapers -type f | sed 's/^Wallpapers.//g'`
	    wallpaper=`menu 'Select wallpaper' "$wallpaper" 'entry.rasi'` &&
		echo ~/Pictures/Wallpapers/"$wallpaper" > ~/.lockbg;;
    esac
}

# Main menu
case $(menu 'X200s' 'Control Panel\nAction\nEdit\nMode\nVPN\nSettings' 'menu.rasi') in
    'Control Panel')
	control_panel;;
    'Action')
	action;;
    'Edit')
	edit;;
    'Mode')
	mode;;
    'VPN')
	vpn;;
    'Settings')
	settings;;
esac


